@import '../../scss/assets/colors';
@import '../../scss/assets/mixins';
@import '../../scss/assets/variables';

.faq-sect {
  padding-top: 50px;
  padding-bottom: 50px;

  &__title {
    margin: 0 0 30px;
    font: bold 20px/150% Montserrat;
  }

  &__list {
    display: flex;
    flex-flow: column;
    align-items: flex-start;
  }

  &__li {
    padding: 0 0 0 40px;
    display: flex;
    flex-flow: column;
    transition: max-height .5s;
    overflow: hidden;

    &:nth-last-child(n+2) {
      margin: 0 0 20px;
      border-bottom: 1px solid $grey;
    }
  }

  &__li-title {
    padding: 0 0 20px;
    position: relative;
    cursor: pointer;
    transition: color .5s;
  }

  &__li-title-icon {
    display: block;
    position: absolute;
    top: 7px;
    left: -25px;
    $width: 10px;
    $lineWidth: 1px;
    $color: $green;
    box-sizing: border-box;
    transition: transform 0.3s;
    width: $width;
    height: $width;
    transform: rotate(180deg);
    pointer-events: none;

    &::before {
      content: '';
      display: block;
      width: $width;
      height: 0px;
      border-bottom: solid $lineWidth $color;
      position: absolute;
      bottom: $width /2 - $lineWidth/2;
      transform: rotate(90deg);
      transition: width 0.3s;
    }

    &::after {
      content: '';
      display: block;
      width: $width;
      height: 0px;
      border-bottom: solid $lineWidth $color;
      position: absolute;
      bottom: $width /2 - $lineWidth/2;
    }
  }

  &__li-descr {
    padding: 0 0 20px;
    // padding: 10px 0;

    &:first-of-type {
      // padding-top: 20px;
    }

    &:last-of-type {
      // padding-bottom: 30px;
    }
  }
}

.faq-sect__li.active {
  >.faq-sect__li-title {
    cursor: default;
  }

  .faq-sect__li-title-icon {
    $width: 10px;
    $lineWidth: 1px;
    $color: $green;
    transform: rotate(0deg);

    &::before {
      content: '';
      display: block;
      width: 0px;
      height: 0px;
      border-bottom: solid $lineWidth $color;
      position: absolute;
      bottom: $width /2 - $lineWidth/2;
      transform: rotate(90deg);
    }
  }
}